{"version":3,"sources":["components/Card.js","components/Auxilliary.js","components/UIComponent.js","components/Aboutme.js","components/Bio.js","components/BioInfo.js","components/PinnedItems.js","components/Main.js","components/Client.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","ternary","useStyles","makeStyles","root","minWidth","color","borderRadius","paddingBottom","backgroundColor","boxShadow","media","height","html","fontSize","smallIcon","width","header","description","info","footer","useStyles1","display","justifyContent","flexWrap","margin","spacing","typography","nowrap","MediaCard","props","classes","classes1","ThemeProvider","Card","className","CardActionArea","style","topics","map","index","Chip","key","size","label","CardContent","align","Typography","gutterBottom","variant","component","name","Divider","light","date","commitBranch","messageHeadline","commitMessage","CardActions","aux","children","FullWidthGrid","repositories","pinnedItems","displayRepositories","Object","keys","igKey","node","refs","nodes","length","recentRef","concat","sort","a","b","target","pushedDate","repositoryTopics","edges","e","topic","commitCount","reduce","acc","curr","history","totalCount","lastCommitMsg","lastCommitTime","moment","fromNow","lastCommitBranch","repoLink","url","homepageUrl","Grid","item","xs","sm","md","lg","avatar","zIndex","top","button","bottom","Avatar","src","avatarUrl","Button","textTransform","paddingRight","minHeight","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","red","RecipeReviewCard","React","useState","expanded","setExpanded","paragraph","text","Box","textAlign","IconButton","clsx","onClick","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","console","log","id","container","direction","alignItems","company","repository","object","GET_REPO_INFO","gql","GET_BIO_INFO","PinnedItems","paddingLeft","query","loading","error","data","viewer","Component","httpLink","createHttpLink","uri","token","graphQLClient","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","Main","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"odAcMA,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAK,WAEPC,UAAW,CACTD,KAAM,WAERE,QAAQ,CACNF,KAAM,cAKNG,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAS,IACTC,MAAM,QACNC,aAAa,OACbC,cAAc,IACdC,gBAAgB,UAChBC,UAAW,uBAEbC,MAAO,CACLC,OAAQ,KAEVC,KAAM,CACJC,SAAU,IAEZC,UAAW,CACTC,MAAO,EACPJ,OAAQ,GAEVK,OAAO,CACLL,OAAO,IAGTM,YAAY,CACVN,OAAO,KAETO,KAAK,CACHP,OAAQ,IAGVQ,OAAO,CACLR,OAAO,MAILS,EAAalB,aAAW,SAACR,GAAD,MAAY,CACxCS,KAAM,CACJkB,QAAS,OACTC,eAAgB,SAChBC,SAAU,OACV,QAAS,CACPC,OAAQ9B,EAAM+B,QAAQ,MAG1BC,WAAY,CACVC,OAAS,YAKE,SAASC,EAAUC,GAChC,IAAMC,EAAU7B,IACV8B,EAAWX,IAEjB,OACA,kBAACY,EAAA,EAAD,CAAetC,MAAOA,GACpB,kBAACuC,EAAA,EAAD,CAAMC,UAAWJ,EAAQ3B,MACvB,kBAACgC,EAAA,EAAD,CAAgBD,UAAaJ,EAAQd,OAAQoB,MAAO,CAAC5B,gBAAgB,YACnE,yBAAK0B,UAAWH,EAAS5B,MACtB0B,EAAMQ,OAAOC,KAAI,SAACC,GACjB,OAAO,kBAACC,EAAA,EAAD,CAAMnC,MAAM,YAAYoC,IAAKF,EAAOG,KAAK,QAAQN,MAAO,CAAEvB,SAAU,GAAIR,MAAM,QAASI,UAAW,wBAA0BkC,MAAOJ,SAIhJ,kBAACJ,EAAA,EAAD,CAAgBC,MAAO,CAAC5B,gBAAgB,YACtC,kBAACoC,EAAA,EAAD,CAAaV,UAAWJ,EAAQb,YAAa4B,MAAM,QACjD,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAAEC,QAAQ,KAAKC,UAAU,MAC9CpB,EAAMqB,MAET,kBAACJ,EAAA,EAAD,CAAYZ,UAAWJ,EAAQJ,WAAYsB,QAAQ,QAASC,UAAU,KACnEpB,EAAMZ,cAGX,kBAACkC,EAAA,EAAD,CAASC,OAAO,EAAMJ,QAAQ,SAASZ,MAAO,CAAC5B,gBAAgB,aAC/D,kBAACoC,EAAA,EAAD,CAAaV,UAAWJ,EAAQZ,KAAM2B,MAAM,QAC1C,kBAACC,EAAA,EAAD,CACEZ,UAAWJ,EAAQlB,KAEnBS,QAAQ,QACR0B,cAAY,GAEZ,kBAAC,IAAD,CAAY1C,MAAM,UAAU+B,MAAO,CAAEvB,SAAU,IAAM8B,MAAM,KAC1D,IAAMd,EAAMwB,KAPf,IAOsB,KAPtB,IAO6BxB,EAAMyB,cAEnC,kBAACR,EAAA,EAAD,CACEE,QAAQ,UAER3B,QAAQ,QACR0B,cAAY,GAEZ,kBAAC,IAAD,CAAuB1C,MAAM,UAAU+B,MAAO,CAAEvB,SAAU,IAAKA,SAAS,QAAQ8B,MAAM,KACrF,IAAKd,EAAM0B,iBAEd,kBAACT,EAAA,EAAD,CACEE,QAAQ,UAER3B,QAAQ,QACR0B,cAAY,GAEZ,kBAAC,IAAD,CAAW1C,MAAM,UAAU+B,MAAO,CAAEvB,SAAU,IAAKA,SAAS,QAAQ8B,MAAM,KACzE,IAAKd,EAAM2B,cAPd,IAO8B,cAIpC,kBAACrB,EAAA,EAAD,CAAiBC,MAAO,CAAC5B,gBAAgB,YACvC,kBAACiD,EAAA,EAAD,CAAarB,MAAO,CAACd,eAAe,SAAUX,OAAO,YACnD,kBAAC,IAAD,CAAYyB,MAAO,CAACzB,OAAO,UAD7B,a,aCjIS+C,EAFH,SAAC7B,GAAD,OAAWA,EAAM8B,UCMd,SAASC,EAAc/B,GAEtC,IAAMgC,EAAehC,EAAMiC,YACrBC,EAAsBC,OAAOC,KAAKJ,GACjCvB,KAAI,SAAC4B,GACgBL,EAAaK,GAAOC,KAAKC,KAAKC,MAAMC,OAAxD,IACMC,EAAYV,EAAaK,GAAOC,KAAKC,KAAKC,MAC/CG,SACAC,MAAK,SAACC,EAAGC,GAAJ,OACND,EAAEE,OAAOC,WAAaF,EAAEC,OAAOC,WAAa,GAAK,KAC/C,GACIxC,EAASwB,EAAaK,GAAOC,KAAKW,iBAAiBC,MAAMzC,KAC7D,SAAC0C,GAAD,OAAOA,EAAEb,KAAKc,MAAM/B,QAEhBgC,EAAcrB,EAAaK,GAAOC,KAAKC,KAAKC,MAAMc,QACtD,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAKT,OAAOU,QAAQC,aACzC,GAGIC,EAAgBjB,EAAUK,OAAOrB,gBACjCkC,EAAiBC,IAAOnB,EAAUK,OAAOC,YAAYc,UACrDC,EAAmBrB,EAAUrB,KAC7B2C,EAAWhC,EAAaK,GAAO4B,IACpBjC,EAAaK,GAAO6B,YACrC,OACU,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG5D,IAAKoD,GAC9C,kBAAC,EAAD,CACExD,OAAUA,EACVa,KAAMW,EAAaK,GAAOC,KAAKjB,KAC/BjC,YAAa4C,EAAaK,GAAOC,KAAKlD,YACtC6E,IAAKD,EACLtC,gBAAiBiC,EACjBhC,cAAe0B,EACf5B,aAAcsC,EACdvC,KAAMoC,EACNhD,IAAKoD,QAOzB,OACQ,kBAAC,EAAD,KACG9B,G,wCCtCLrE,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAK,WAEPC,UAAW,CACTD,KAAM,WAERE,QAAQ,CACNF,KAAM,cAKNG,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAS,IACTO,OAAO,IACPN,MAAM,QACNC,aAAa,OACbC,cAAc,IACdC,gBAAgB,UAChBC,UAAW,uBAEbC,MAAO,CACLC,OAAQ,KAEVC,KAAM,CACJC,SAAU,IAEZC,UAAW,CACTC,MAAO,EACPJ,OAAQ,GAEVK,OAAO,CACLL,OAAO,KAKT2F,OAAQ,CACNvF,MAAO,GACPJ,OAAQ,GACRa,OAAQ,OACR+E,OAAQ,GACRC,IAAI,IAENvF,YAAY,CACVN,OAAO,KAGT8F,OAAO,CACLpF,QAAS,OACTC,eAAgB,gBAChBoF,OAAO,KAMLtF,EAAalB,aAAW,SAACR,GAAD,MAAY,CACxCS,KAAM,CACJkB,QAAS,OACTC,eAAgB,SAChBC,SAAU,OACV,QAAS,CACPC,OAAQ9B,EAAM+B,QAAQ,MAG1BC,WAAY,CACVC,OAAS,YAKE,SAASC,EAAUC,GAChC,IAAMC,EAAU7B,IACV8B,EAAWX,IAEjB,OACA,kBAACY,EAAA,EAAD,CAAetC,MAAOA,GACpB,kBAACuC,EAAA,EAAD,CAAMC,UAAWJ,EAAQ3B,MAEvB,kBAACgC,EAAA,EAAD,CAAgBD,UAAWJ,EAAQd,OAAQoB,MAAO,CAAC5B,gBAAgB,YACjE,yBAAK0B,UAAWH,EAAS5B,MACtB0B,EAAMQ,OAAOC,KAAI,SAACC,GACjB,OAAO,kBAACC,EAAA,EAAD,CAAMnC,MAAM,YAAYoC,IAAKF,EAAOG,KAAK,QAAQN,MAAO,CAAEvB,SAAU,GAAIR,MAAM,QAASI,UAAW,wBAA0BkC,MAAOJ,QAG5I,kBAACoE,EAAA,EAAD,CAASzE,UAAWJ,EAAQwE,OAASM,IAAK/E,EAAMgF,aAIpD,kBAAC1E,EAAA,EAAD,CAAgBD,UAAWJ,EAAQb,YAAamB,MAAO,CAAC5B,gBAAgB,YACtE,kBAACoC,EAAA,EAAD,CAAcC,MAAM,QAClB,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAAEC,QAAQ,KAAKC,UAAU,MAC9CpB,EAAMqB,MAET,kBAACJ,EAAA,EAAD,CAAYZ,UAAWJ,EAAQJ,WAAYsB,QAAQ,QAAQ3C,MAAM,UAAU4C,UAAU,KAClFpB,EAAMZ,eAMX,kBAAC6F,EAAA,EAAD,CAAQ1E,MAAO,CAACrB,MAAM,MAAMP,gBAAgB,QAAQH,MAAM,QAAQ0G,cAAc,SAAS,kBAACtD,EAAA,EAAD,KAAa,kBAAC,IAAD,CAAYrB,MAAO,CAAC4E,aAAa,KAAM,aAC3I,kBAACF,EAAA,EAAD,CAAS1E,MAAO,CAACrB,MAAM,MAAMP,gBAAgB,UAAUH,MAAM,QAAS0G,cAAc,SAAS,kBAACtD,EAAA,EAAD,cAAmB,kBAAC,IAAD,U,sFCtGpH/D,GAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAK,WAEPC,UAAW,CACTD,KAAM,WAERE,QAAQ,CACNF,KAAM,cAONG,GAAYC,aAAW,SAACR,GAAD,MAAY,CACvCS,KAAM,CACJC,SAAS,IACTC,MAAM,QACN4G,UAAU,IACVtG,OAAQ,OACRF,UAAW,sBACXH,aAAc,QAGhBI,MAAO,CACLC,OAAQ,EACRuG,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAY5H,EAAM6H,YAAYC,OAAO,YAAa,CAChDC,SAAU/H,EAAM6H,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbd,OAAQ,CACN9F,gBAAiBoH,KAAI,UAIV,SAASC,GAAiBhG,GACvC,IAAMC,EAAU7B,KAD8B,EAEd6H,IAAMC,UAAS,GAFD,mBAEvCC,EAFuC,KAE7BC,EAF6B,KAQ9C,OACE,kBAACjG,EAAA,EAAD,CAAetC,MAAOA,IACtB,kBAACuC,EAAA,EAAD,CAAMC,UAAWJ,EAAQ3B,KAAMiC,MAAO,CAAC5B,gBAAgB,YACrD,kBAACiD,EAAA,EAAD,KAEI,kBAACX,EAAA,EAAD,CAAYoF,WAAS,EAACrF,MAAM,QACzBhB,EAAMsG,MAGT,kBAACC,EAAA,EAAD,CAAKC,UAAY,UACnB,kBAACC,GAAA,EAAD,CACEpG,UAAWqG,YAAKzG,EAAQqF,OAAT,eACZrF,EAAQ6F,WAAaK,IAExBQ,QAlBkB,WACxBP,GAAaD,IAkBPS,gBAAeT,EACfU,aAAW,YACXrI,MAAM,WAEN,kBAAC,KAAD,SAGJ,kBAACsI,EAAA,EAAD,CAAUC,GAAIZ,EAAUa,QAAQ,OAAOC,eAAa,GAClD,kBAAClG,EAAA,EAAD,CAAaC,MAAM,QACjB,kBAACC,EAAA,EAAD,CAAYoF,WAAS,GAArB,WACA,kBAACpF,EAAA,EAAD,CAAYoF,WAAS,GAArB,iGAIA,kBAACpF,EAAA,EAAD,CAAYoF,WAAS,GAArB,wfAQA,kBAACpF,EAAA,EAAD,CAAYoF,WAAS,GAArB,sZAOA,kBAACpF,EAAA,EAAD,kFCzGK,SAASc,GAAc/B,GAItC,OADAkH,QAAQC,IAAInH,EAAMX,KAAK+H,IAErB,kBAACjD,EAAA,EAAD,CAAMkD,WAAS,EAACC,UAAU,MAAO1H,QAAS,EAAG2H,WAAW,SAAShH,MAAO,CAAC8E,WAAW,KAAK3G,cAAc,OACrG,kBAACyF,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAEpC,kBAAC,EAAD,CAAShE,OANA,CAAC,SAAS,OAAO,WAAW,QAAQ,MAAM,SAAS,SAAS,YAM5Ca,KAAMrB,EAAMX,KAAKgC,KAAMmG,QAASxH,EAAMX,KAAKmI,QAASxC,UAAWhF,EAAMX,KAAK2F,aAErG,kBAACb,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACpC,kBAAC,GAAD,CAAK8B,KAAMtG,EAAMX,KAAKoI,WAAWC,OAAOpB,S,+6CCZ9C,IAAMqB,GAAgBC,YAAH,MAiDbC,GAAeD,YAAH,MAkEHE,G,uKAtCb,OAEE,kBAAC3D,EAAA,EAAD,CAAMkD,WAAS,EAACE,WAAW,SAAShH,MAAO,CAACwH,YAAY,MAAM5C,aAAa,MAAME,WAAW,KAAK3G,cAAc,OAE7G,kBAAC,IAAD,CAAOsJ,MAAOH,GAAcjH,IAAK,MAC9B,gBAAGqH,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,KAAnB,OACC,kBAAC,EAAD,KACGF,GAAW,2CACXC,GAAS,yCACTC,GAEC,kBAAC,GAAD,CAAS9I,KAAQ8I,EAAKC,aAOhC,kBAACjE,EAAA,EAAD,CAAMkD,WAAS,EAACC,UAAU,MAAM1H,QAAS,EAAI2H,WAAW,SAAShH,MAAO,CAAC8E,WAAW,KAAK3G,cAAc,OACrG,kBAAC,IAAD,CAAOsJ,MAAOL,KACX,gBAAGM,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,KAAnB,OACC,kBAAC,EAAD,KACGF,GAAW,2CACXC,GAAS,yCACTC,GAEC,kBAAC,EAAD,CAAalG,YAAekG,EAAKC,OAAOnG,YAAYiB,kB,GA9BxCmF,aCrEXpK,GARF,WAEX,OACE,kBAAC,EAAD,KACM,kBAAC,GAAD,Q,qCCHJqK,GAAW,IAAIC,kBAAe,CAAEC,IAAK,mCACrCC,GAAQ,2CA8BCC,GA7BO,SAAC1I,GAErB,IAAM2I,EAAWC,cAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAIhC,MAAO,CACLA,QAAQ,6BACHA,GADE,IAELC,cAAoB,iBAAaN,UAKjCO,EAAS,IAAIC,gBAAa,CAC9BC,KAAMP,EAAShG,OAAO2F,IACtBa,MAAO,IAAIC,mBAIZ,OACK,kBAAC,KAAD,CAAgBJ,OAAQA,GAErBhJ,EAAM8B,WChBFuH,OAVf,WACE,OACE,yBAAKhJ,UAAU,OACb,kBAAC,GAAD,KACE,kBAACiJ,GAAD,SCGYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAArC,GACLhB,QAAQgB,MAAMA,EAAMsC,c","file":"static/js/main.bb26d5e8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport FlareIcon from \"@material-ui/icons/Flare\";\r\nimport { createMuiTheme,ThemeProvider  } from '@material-ui/core/styles';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main:\"#4faeae\",\r\n    },\r\n    secondary: {\r\n      main: '#6a6c6c',\r\n    },\r\n    ternary:{\r\n      main: '#37393a',\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth:350,\r\n    color:\"white\",\r\n    borderRadius:\"10px\",\r\n    paddingBottom:\"0\",\r\n    backgroundColor:\"#555656\",\r\n    boxShadow: \"8px 8px 5px #222424\"\r\n  },\r\n  media: {\r\n    height: 140\r\n  },\r\n  html: {\r\n    fontSize: 12\r\n  },\r\n  smallIcon: {\r\n    width: 2,\r\n    height: 2,\r\n  },\r\n  header:{\r\n    height:80,\r\n\r\n  },\r\n  description:{\r\n    height:100\r\n  },\r\n  info:{\r\n    height: 60\r\n\r\n  },\r\n  footer:{\r\n    height:20\r\n  },\r\n});\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  typography: {\r\n    nowrap : \"true\"\r\n  }\r\n\r\n}));\r\n\r\nexport default function MediaCard(props) {\r\n  const classes = useStyles();\r\n  const classes1 = useStyles1();\r\n\r\n  return (\r\n  <ThemeProvider theme={theme}>\r\n    <Card className={classes.root}>\r\n      <CardActionArea className = {classes.header} style={{backgroundColor:\"#404242\" }}>\r\n        <div className={classes1.root}>\r\n          {props.topics.map((index) => {\r\n            return <Chip color=\"secondary\" key={index} size=\"small\" style={{ fontSize: 10, color:\"white\", boxShadow: \"1px 1px 1px #2b2d2d \"}}  label={index} />\r\n          })}\r\n        </div>\r\n      </CardActionArea>\r\n      <CardActionArea style={{backgroundColor:\"#2b2d2d\"}}>\r\n        <CardContent className={classes.description} align=\"left\">\r\n          <Typography gutterBottom  variant=\"h5\" component=\"h2\">\r\n            {props.name}\r\n          </Typography>\r\n          <Typography className={classes.typography} variant=\"body2\"  component=\"p\">\r\n            {props.description}\r\n          </Typography>\r\n        </CardContent>\r\n        <Divider light={true} variant=\"middle\" style={{backgroundColor:\"#4faeae\"}}/>\r\n        <CardContent className={classes.info} align=\"left\" >\r\n          <Typography\r\n            className={classes.html}\r\n\r\n            display=\"block\"\r\n            gutterBottom\r\n          >\r\n            <UpdateIcon color=\"primary\" style={{ fontSize: 12 }} label=\"\" />\r\n            {' '}{ props.date} {\"on\"} {props.commitBranch}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"caption\"\r\n\r\n            display=\"block\"\r\n            gutterBottom\r\n          >\r\n            <ChatBubbleOutlineIcon color=\"primary\" style={{ fontSize: 12}} fontSize=\"small\" label=\"\" />\r\n            {' '}{props.messageHeadline}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"caption\"\r\n\r\n            display=\"block\"\r\n            gutterBottom\r\n          >\r\n            <FlareIcon color=\"primary\" style={{ fontSize: 12}} fontSize=\"small\" label=\"\" />\r\n            {' '}{props.commitMessage} {\" commits\"}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    <CardActionArea  style={{backgroundColor:\"#4faeae\"}}>\r\n      <CardActions style={{justifyContent:'center', height:'inherit'}}>\r\n        <GitHubIcon style={{height:'100%'}}/>\r\n        GitHub\r\n      </CardActions>\r\n    </CardActionArea>\r\n\r\n\r\n    </Card>\r\n  </ThemeProvider>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nconst aux = (props) => props.children;\r\n\r\nexport default aux;\r\n","import moment from 'moment'\r\nimport React  from 'react'\r\nimport Card from './Card'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Aux from './Auxilliary'\r\n\r\n\r\nexport default function FullWidthGrid(props) {\r\n\r\nconst repositories = props.pinnedItems\r\nconst displayRepositories = Object.keys(repositories)\r\n      .map((igKey) =>{\r\n        const branchCount = repositories[igKey].node.refs.nodes.length\r\n        const recentRef = repositories[igKey].node.refs.nodes\r\n        .concat()\r\n        .sort((a, b) =>\r\n        a.target.pushedDate < b.target.pushedDate ? 1 : -1\r\n        )[0]\r\n        const topics = repositories[igKey].node.repositoryTopics.edges.map(\r\n          (e) => e.node.topic.name\r\n        )\r\n        const commitCount = repositories[igKey].node.refs.nodes.reduce(\r\n          (acc, curr) => acc + curr.target.history.totalCount,\r\n          0\r\n        )\r\n\r\n        const lastCommitMsg = recentRef.target.messageHeadline\r\n        const lastCommitTime = moment(recentRef.target.pushedDate).fromNow()\r\n        const lastCommitBranch = recentRef.name\r\n        const repoLink = repositories[igKey].url\r\n        const demoLink = repositories[igKey].homepageUrl\r\n        return (\r\n                  <Grid item xs={12} sm={12} md={4} lg={4} key={repoLink}>\r\n                  <Card\r\n                    topics = {topics}\r\n                    name={repositories[igKey].node.name}\r\n                    description={repositories[igKey].node.description}\r\n                    url={repoLink}\r\n                    messageHeadline={lastCommitMsg}\r\n                    commitMessage={commitCount }\r\n                    commitBranch={lastCommitBranch}\r\n                    date={lastCommitTime}\r\n                    key={repoLink}\r\n                    />\r\n                  </Grid>\r\n\r\n              )\r\n      });\r\n\r\nreturn (\r\n        <Aux>\r\n          {displayRepositories}\r\n        </Aux>\r\n)\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport { createMuiTheme,ThemeProvider  } from '@material-ui/core/styles';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main:\"#4faeae\",\r\n    },\r\n    secondary: {\r\n      main: '#6a6c6c',\r\n    },\r\n    ternary:{\r\n      main: '#37393a',\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth:350,\r\n    height:350,\r\n    color:\"white\",\r\n    borderRadius:\"10px\",\r\n    paddingBottom:\"0\",\r\n    backgroundColor:\"#2b2d2d\",\r\n    boxShadow: \"8px 8px 5px #222424\"\r\n  },\r\n  media: {\r\n    height: 140\r\n  },\r\n  html: {\r\n    fontSize: 12\r\n  },\r\n  smallIcon: {\r\n    width: 2,\r\n    height: 2,\r\n  },\r\n  header:{\r\n    height:105,\r\n\r\n\r\n\r\n  },\r\n  avatar: {\r\n    width: 80,\r\n    height: 80,\r\n    margin: 'auto',\r\n    zIndex: 10,\r\n    top:10\r\n  },\r\n  description:{\r\n    height:200,\r\n\r\n  },\r\n  button:{\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    bottom:0\r\n\r\n  },\r\n\r\n});\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5)\r\n    }\r\n  },\r\n  typography: {\r\n    nowrap : \"true\"\r\n  }\r\n\r\n}));\r\n\r\nexport default function MediaCard(props) {\r\n  const classes = useStyles();\r\n  const classes1 = useStyles1();\r\n\r\n  return (\r\n  <ThemeProvider theme={theme}>\r\n    <Card className={classes.root} >\r\n\r\n      <CardActionArea className={classes.header} style={{backgroundColor:\"#404242\"}}>\r\n        <div className={classes1.root}>\r\n          {props.topics.map((index) => {\r\n            return <Chip color=\"secondary\" key={index} size=\"small\" style={{ fontSize: 10, color:\"white\", boxShadow: \"1px 1px 1px #2b2d2d \"}}  label={index} />\r\n          })}\r\n        </div>\r\n          <Avatar  className={classes.avatar}  src={props.avatarUrl} />\r\n      </CardActionArea>\r\n\r\n\r\n      <CardActionArea className={classes.description} style={{backgroundColor:\"#2b2d2d\"}}>\r\n        <CardContent  align=\"left\">\r\n          <Typography gutterBottom  variant=\"h5\" component=\"h2\">\r\n            {props.name}\r\n          </Typography>\r\n          <Typography className={classes.typography} variant=\"body2\" color=\"primary\" component=\"p\">\r\n            {props.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n\r\n\r\n        <Button style={{width:\"50%\",backgroundColor:\"black\",color:\"white\",textTransform:\"none\"}}><CardActions><GitHubIcon style={{paddingRight:5}}/>{'  GitHub'}</CardActions></Button>\r\n          <Button  style={{width:\"50%\",backgroundColor:\"#2867B2\",color:\"white\", textTransform:\"none\"}}><CardActions>Linked<LinkedInIcon/></CardActions></Button>\r\n\r\n\r\n\r\n    </Card>\r\n  </ThemeProvider>\r\n\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { createMuiTheme,ThemeProvider  } from '@material-ui/core/styles';\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main:\"#4faeae\",\r\n    },\r\n    secondary: {\r\n      main: '#6a6c6c',\r\n    },\r\n    ternary:{\r\n      main: '#37393a',\r\n    }\r\n  },\r\n});\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth:350,\r\n    color:'white',\r\n    minHeight:350,\r\n    height: \"100%\",\r\n    boxShadow: \"8px 8px 5px #222424\",\r\n    borderRadius: '10px',\r\n\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <Card className={classes.root} style={{backgroundColor:\"#2b2d2d\"}}>\r\n      <CardActions>\r\n\r\n          <Typography paragraph align=\"left\" >\r\n            {props.text}\r\n\r\n          </Typography>\r\n          <Box textAlign = \"center\">\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n          color=\"primary\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton></Box>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent align=\"left\" >\r\n          <Typography paragraph>Method:</Typography>\r\n          <Typography paragraph>\r\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\r\n            minutes.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\r\n            heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\r\n            browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken\r\n            and chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes, onion, salt and\r\n            pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add\r\n            saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook\r\n            without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat to\r\n            medium-low, add reserved shrimp and mussels, tucking them down into the rice, and cook\r\n            again without stirring, until mussels have opened and rice is just tender, 5 to 7\r\n            minutes more. (Discard any mussels that don’t open.)\r\n          </Typography>\r\n          <Typography>\r\n            Set aside off of the heat to let rest for 10 minutes, and then serve.\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import moment from 'moment'\r\nimport React  from 'react'\r\nimport Card from './Card'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Aux from './Auxilliary'\r\nimport AboutMe from './Aboutme'\r\nimport Bio from './Bio'\r\n\r\n\r\nexport default function FullWidthGrid(props) {\r\n\r\nconst topics = ['Ashish','asas','asdasdas','arwef','ASD','ASDASD','EFAFEF','ASEFGAVG']\r\nconsole.log(props.info.id);\r\nreturn (\r\n  <Grid container direction=\"row\"  spacing={3} alignItems=\"center\" style={{paddingTop:\"5%\",paddingBottom:\"5%\"}}>\r\n    <Grid item xs={12} sm={12} md={4} lg={4}>\r\n\r\n      <AboutMe topics={topics} name={props.info.name} company={props.info.company} avatarUrl={props.info.avatarUrl}/>\r\n    </Grid>\r\n    <Grid item xs={12} sm={12} md={8} lg={8}>\r\n      <Bio text={props.info.repository.object.text}/>\r\n    </Grid>\r\n  </Grid>\r\n)\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Query } from 'react-apollo';\r\nimport { gql,useQuery  } from 'apollo-boost';\r\nimport UIComponent from './UIComponent'\r\nimport Aux from './Auxilliary'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Bioinfo from  './BioInfo'\r\nimport { InMemoryCache } from '@apollo/client';\r\n\r\nconst GET_REPO_INFO = gql`\r\nquery  {\r\n    viewer {\r\n        id\r\n      pinnedItems(first: 3) {\r\n        edges {\r\n          node {\r\n            ... on Repository {\r\n              id\r\n              name\r\n              description\r\n              homepageUrl\r\n              pushedAt\r\n              url\r\n              openGraphImageUrl\r\n              usesCustomOpenGraphImage\r\n              refs(refPrefix: \"refs/heads/\", last: 3) {\r\n                nodes {\r\n                  name\r\n                  target {\r\n                    ... on Commit {\r\n                      history {\r\n                        totalCount\r\n                      }\r\n                      messageHeadline\r\n                      pushedDate\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              repositoryTopics(first: 100) {\r\n                edges {\r\n                  node {\r\n                    topic {\r\n                      name\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst GET_BIO_INFO = gql`\r\n  query{\r\n\tviewer{\r\n    id\r\n    url\r\n    name\r\n    avatarUrl\r\n    bio\r\n   \tcompany\r\n    repository(name:\"ashuprabhune\"){\r\n      id\r\n      object(expression: \"master:README.md\") {\r\n      ... on Blob {\r\n        text\r\n      }\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n}\r\n`;\r\n\r\n\r\nclass PinnedItems extends Component {\r\n\r\n  render(){\r\n\r\n  return(\r\n\r\n    <Grid container alignItems=\"center\" style={{paddingLeft:\"20%\",paddingRight:\"20%\",paddingTop:\"5%\",paddingBottom:\"5%\"}}>\r\n\r\n      <Query query={GET_BIO_INFO} key={\"1\"}>\r\n        {({ loading, error, data }) => (\r\n          <Aux>\r\n            {loading && <div>Loading...</div>}\r\n            {error && <div>Error...</div>}\r\n            {data && (\r\n\r\n              <Bioinfo info = {data.viewer} />\r\n            )}\r\n          </Aux>\r\n        )}\r\n      </Query>\r\n\r\n\r\n    <Grid container direction=\"row\" spacing={3}  alignItems=\"center\" style={{paddingTop:\"5%\",paddingBottom:\"5%\"}}>\r\n      <Query query={GET_REPO_INFO}>\r\n        {({ loading, error, data }) => (\r\n          <Aux>\r\n            {loading && <div>Loading...</div>}\r\n            {error && <div>Error...</div>}\r\n            {data && (\r\n\r\n              <UIComponent pinnedItems = {data.viewer.pinnedItems.edges} />\r\n            )}\r\n          </Aux>\r\n        )}\r\n      </Query>\r\n    </Grid>\r\n  </Grid>\r\n\r\n\r\n  )}\r\n};\r\n\r\nexport default PinnedItems;\r\n","import React from 'react'\r\nimport PinnedItems from './PinnedItems'\r\n\r\nimport Aux from './Auxilliary'\r\n\r\nconst main = () => {\r\n\r\n  return(\r\n    <Aux>\r\n          <PinnedItems />\r\n    </Aux>\r\n)}\r\n\r\nexport default main;\r\n","import React   from 'react'\r\nimport { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\n\r\nconst httpLink = new createHttpLink({ uri: 'https://api.github.com/graphql' });\r\nconst token = 'bde4eac2ebfd0a494d5ddcc6dbe69fa42c177e18';\r\nconst graphQLClient = (props) => {\r\n\r\n  const authLink = setContext((_, { headers }) => {\r\n    // get the authentication token from local storage if it exists\r\n\r\n    // return the headers to the context so httpLink can read them\r\n    return {\r\n      headers: {\r\n        ...headers,\r\n        authorization: token ? `Bearer ${token}` : \"\",\r\n      }\r\n    }\r\n  });\r\n\r\n  const client = new ApolloClient({\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache()\r\n  });\r\n\r\n\r\n   return(\r\n        <ApolloProvider client={client}>\r\n\r\n          {props.children}\r\n\r\n        </ApolloProvider>\r\n    );\r\n};\r\n\r\nexport default graphQLClient;\r\n","import React from 'react';\nimport './App.css';\nimport Main from './components/Main'\nimport GraphQLClient from './components/Client'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GraphQLClient>\n        <Main />\n      </GraphQLClient>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}